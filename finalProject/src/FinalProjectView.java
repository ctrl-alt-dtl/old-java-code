/*
 * FinalProjectView.java
 */

package finalproject;

import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.*;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;

/**
 * The application's main frame.
 */
public class FinalProjectView extends FrameView {

    public FinalProjectView(SingleFrameApplication app) {
        super(app);

        initComponents();
        
        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                statusMessageLabel.setText("Final Project");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        statusAnimationLabel.setIcon(idleIcon);
        progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                    progressBar.setVisible(false);
                    progressBar.setIndeterminate(false);
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    statusAnimationLabel.setIcon(idleIcon);
                    progressBar.setVisible(false);
                    progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String)(evt.getNewValue());
                    statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer)(evt.getNewValue());
                    progressBar.setVisible(false);
                    progressBar.setIndeterminate(false);
                    progressBar.setValue(value);
                }
            }
        });
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = FinalProjectApp.getApplication().getMainFrame();
            aboutBox = new FinalProjectAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        FinalProjectApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")


    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        InputText = new javax.swing.JTextPane();
        Convert = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        ConvertText = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Load = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        TextPane = new javax.swing.JTextPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        FileOutputText = new javax.swing.JTextPane();
        jScrollPane5 = new javax.swing.JScrollPane();
        FileOutputText1 = new javax.swing.JTextPane();
        DeleteTxt = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        FileOutputText2 = new javax.swing.JTextPane();
        jScrollPane7 = new javax.swing.JScrollPane();
        FileOutputText3 = new javax.swing.JTextPane();
        jScrollPane8 = new javax.swing.JScrollPane();
        ErrorPane = new javax.swing.JTextPane();
        jLabel4 = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        statusPanel = new javax.swing.JPanel();
        javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();

        mainPanel.setMaximumSize(new java.awt.Dimension(300, 300));
        mainPanel.setName("mainPanel"); // NOI18N
        mainPanel.setOpaque(false);
        mainPanel.setPreferredSize(new java.awt.Dimension(300, 300));
        mainPanel.setLayout(null);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(finalproject.FinalProjectApp.class).getContext().getResourceMap(FinalProjectView.class);
        InputText.setForeground(resourceMap.getColor("InputText.foreground")); // NOI18N
        InputText.setText(resourceMap.getString("InputText.text")); // NOI18N
        InputText.setAutoscrolls(false);
        InputText.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        InputText.setName("InputText"); // NOI18N
        jScrollPane1.setViewportView(InputText);

        mainPanel.add(jScrollPane1);
        jScrollPane1.setBounds(10, 80, 140, 30);

        Convert.setText(resourceMap.getString("Convert.text")); // NOI18N
        Convert.setMaximumSize(new java.awt.Dimension(143, 20));
        Convert.setMinimumSize(new java.awt.Dimension(143, 20));
        Convert.setName("Convert"); // NOI18N
        Convert.setPreferredSize(new java.awt.Dimension(143, 20));
        Convert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConvertActionPerformed(evt);
            }
        });
        mainPanel.add(Convert);
        Convert.setBounds(160, 80, 143, 30);

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        ConvertText.setEditable(false);
        ConvertText.setForeground(resourceMap.getColor("ConvertText.foreground")); // NOI18N
        ConvertText.setText(resourceMap.getString("ConvertText.text")); // NOI18N
        ConvertText.setAutoscrolls(false);
        ConvertText.setName("ConvertText"); // NOI18N
        jScrollPane2.setViewportView(ConvertText);

        mainPanel.add(jScrollPane2);
        jScrollPane2.setBounds(10, 130, 140, 28);

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        mainPanel.add(jLabel1);
        jLabel1.setBounds(10, 0, 160, 20);

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N
        mainPanel.add(jLabel2);
        jLabel2.setBounds(10, 110, 120, 14);

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N
        mainPanel.add(jLabel3);
        jLabel3.setBounds(10, 170, 130, 14);

        Load.setText(resourceMap.getString("Load.text")); // NOI18N
        Load.setName("Load"); // NOI18N
        Load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadActionPerformed(evt);
            }
        });
        mainPanel.add(Load);
        Load.setBounds(160, 190, 140, 30);

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        TextPane.setEditable(false);
        TextPane.setText(resourceMap.getString("TextPane.text")); // NOI18N
        TextPane.setAutoscrolls(false);
        TextPane.setName("TextPane"); // NOI18N
        jScrollPane3.setViewportView(TextPane);

        mainPanel.add(jScrollPane3);
        jScrollPane3.setBounds(10, 190, 140, 31);

        jScrollPane4.setName("jScrollPane4"); // NOI18N

        FileOutputText.setBackground(resourceMap.getColor("FileOutputText.background")); // NOI18N
        FileOutputText.setBorder(null);
        FileOutputText.setEditable(false);
        FileOutputText.setForeground(resourceMap.getColor("FileOutputText.foreground")); // NOI18N
        FileOutputText.setName("FileOutputText"); // NOI18N
        jScrollPane4.setViewportView(FileOutputText);

        mainPanel.add(jScrollPane4);
        jScrollPane4.setBounds(160, 120, 140, 30);

        jScrollPane5.setName("jScrollPane5"); // NOI18N

        FileOutputText1.setBackground(resourceMap.getColor("FileOutputText1.background")); // NOI18N
        FileOutputText1.setBorder(null);
        FileOutputText1.setEditable(false);
        FileOutputText1.setForeground(resourceMap.getColor("FileOutputText1.foreground")); // NOI18N
        FileOutputText1.setName("FileOutputText1"); // NOI18N
        jScrollPane5.setViewportView(FileOutputText1);

        mainPanel.add(jScrollPane5);
        jScrollPane5.setBounds(160, 140, 140, 30);

        DeleteTxt.setText(resourceMap.getString("DeleteTxt.text")); // NOI18N
        DeleteTxt.setName("DeleteTxt"); // NOI18N
        DeleteTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteTxtActionPerformed(evt);
            }
        });
        mainPanel.add(DeleteTxt);
        DeleteTxt.setBounds(10, 20, 140, 30);

        jScrollPane6.setName("jScrollPane6"); // NOI18N

        FileOutputText2.setBackground(resourceMap.getColor("FileOutputText2.background")); // NOI18N
        FileOutputText2.setBorder(null);
        FileOutputText2.setEditable(false);
        FileOutputText2.setForeground(resourceMap.getColor("FileOutputText2.foreground")); // NOI18N
        FileOutputText2.setName("FileOutputText2"); // NOI18N
        jScrollPane6.setViewportView(FileOutputText2);

        mainPanel.add(jScrollPane6);
        jScrollPane6.setBounds(150, 20, 180, 30);

        jScrollPane7.setName("jScrollPane7"); // NOI18N

        FileOutputText3.setBackground(resourceMap.getColor("FileOutputText3.background")); // NOI18N
        FileOutputText3.setBorder(null);
        FileOutputText3.setForeground(resourceMap.getColor("FileOutputText3.foreground")); // NOI18N
        FileOutputText3.setName("FileOutputText3"); // NOI18N
        jScrollPane7.setViewportView(FileOutputText3);

        mainPanel.add(jScrollPane7);
        jScrollPane7.setBounds(160, 220, 140, 30);

        jScrollPane8.setBackground(resourceMap.getColor("jScrollPane8.background")); // NOI18N
        jScrollPane8.setBorder(null);
        jScrollPane8.setName("jScrollPane8"); // NOI18N

        ErrorPane.setBackground(resourceMap.getColor("ErrorPane.background")); // NOI18N
        ErrorPane.setEditable(false);
        ErrorPane.setForeground(resourceMap.getColor("ErrorPane.foreground")); // NOI18N
        ErrorPane.setName("ErrorPane"); // NOI18N
        jScrollPane8.setViewportView(ErrorPane);

        mainPanel.add(jScrollPane8);
        jScrollPane8.setBounds(160, 60, 140, 20);

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N
        mainPanel.add(jLabel4);
        jLabel4.setBounds(10, 60, 120, 14);

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(finalproject.FinalProjectApp.class).getContext().getActionMap(FinalProjectView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        statusPanel.setName("statusPanel"); // NOI18N

        statusPanelSeparator.setName("statusPanelSeparator"); // NOI18N

        statusMessageLabel.setName("statusMessageLabel"); // NOI18N

        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

        progressBar.setName("progressBar"); // NOI18N

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusMessageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 166, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusAnimationLabel)
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusMessageLabel)
                    .addComponent(statusAnimationLabel)
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3))
        );

        setComponent(mainPanel);
        setMenuBar(menuBar);
        setStatusBar(statusPanel);
    }// </editor-fold>//GEN-END:initComponents

    private void ConvertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConvertActionPerformed
        try{
        String text2 = InputText.getText();
        StringBuilder s = new StringBuilder(text2);
        String searchS = "4";
        int len = searchS.length();
        int result = 0;
        if(len > 0){
            int start = s.indexOf(searchS);
            while(start != -1){
                result++;
                start = s.indexOf(searchS, start+len);
            }
        }
        s.replace(1, 4, "hat");
        s.reverse();
        String reverseString = s.toString();
        ConvertText.setText(s.length()+","+result+","+reverseString);
        FileOutputText.setText("  Creating Save File...");

        try{
         File file =  new File("ThisCat.txt"); 
            if(file.exists())
                FileOutputText1.setText("  File Exists Aleady...");
            else{
            java.io.PrintWriter output = new java.io.PrintWriter (file);
            output.print(text2);
            output.close();}
        }catch(IOException e){}

        }catch(java.lang.StringIndexOutOfBoundsException a)  {
            ErrorPane.setText("Error No String Typed!");

        }
        
    }//GEN-LAST:event_ConvertActionPerformed

    private void LoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadActionPerformed

        try{
            FileInputStream fin;
            fin = new FileInputStream("ThisCat.txt");
            BufferedInputStream bin = new BufferedInputStream(fin);
            byte[] contents = new byte[512];
            int bytesRead = 0;
            String strFileContents;

            boolean load = (new File("ThisCat.txt")).delete();
            
            while((bytesRead = bin.read(contents)) != -1){
                strFileContents = new String(contents, 0, bytesRead);
                StringBuilder s2 = new StringBuilder(strFileContents);
                String searchS2 = "4";
                int len2 = searchS2.length();
                int result2 = 0;
                if(len2 > 0){
                int start2 = s2.indexOf(searchS2);
                while(start2 != -1){
                result2++;
                start2 = s2.indexOf(searchS2, start2+len2);
            }
        }
                s2.replace(1, 4, "hat");
                s2.reverse();
                String reverseString = s2.toString();
                TextPane.setText(s2.length()+","+result2+","+reverseString);
            }
            }catch (IOException e){
            FileOutputText3.setText("Error... No File to Load");
           }
    }//GEN-LAST:event_LoadActionPerformed

    private void DeleteTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteTxtActionPerformed
            boolean success = (new File("ThisCat.txt")).delete();
            if (success){
                FileOutputText2.setText("  \"ThisCat.Txt\" Deleted");
            }
            else if(!success){
                FileOutputText2.setText("  No file to Delete...");
            }
    }//GEN-LAST:event_DeleteTxtActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Convert;
    private javax.swing.JTextPane ConvertText;
    private javax.swing.JButton DeleteTxt;
    private javax.swing.JTextPane ErrorPane;
    private javax.swing.JTextPane FileOutputText;
    private javax.swing.JTextPane FileOutputText1;
    private javax.swing.JTextPane FileOutputText2;
    private javax.swing.JTextPane FileOutputText3;
    private javax.swing.JTextPane InputText;
    private javax.swing.JButton Load;
    private javax.swing.JTextPane TextPane;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;

    private JDialog aboutBox;
}
